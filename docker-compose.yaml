services:
  api:
    build:
      context: ./back
      dockerfile: Dockerfile
    container_name: ${PROJECT_NAME}-api
    ports:
      - "3001:3001"
      - "5555:5555"
    volumes:
      - ./back:/app
    depends_on:
      database:
        condition: service_healthy
      database-test:
        condition: service_healthy
    environment:
      - NODE_ENV=development
  web:
    build:
      context: ./front
      dockerfile: Dockerfile
    container_name: ${PROJECT_NAME}-web
    ports:
      - "3000:3000"
    volumes:
      - ./front:/app
    depends_on:
      - api
    environment:
      - NODE_ENV=development

  database:
    image: mysql:latest
    container_name: ${PROJECT_NAME}-mysql
    volumes:
      - db_data:/var/lib/mysql
    ports:
      - "3306:3306"
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_ROOT_USER=${MYSQL_ROOT_USER}
      - MYSQL_DATABASE=${PROJECT_NAME}
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "mysqladmin ping -h 127.0.0.1 -p$$MYSQL_ROOT_PASSWORD --silent",
        ]
      interval: 5s
      timeout: 3s
      retries: 30

  database-test:
    image: mysql:latest
    container_name: ${PROJECT_NAME}-mysql-test
    volumes:
      - db_data_test:/var/lib/mysql
    ports:
      - "3307:3306"
    environment:
      - MYSQL_ROOT_PASSWORD=root
      - MYSQL_ROOT_USER=root
      - MYSQL_DATABASE=BabyFootClementine-test
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "mysqladmin ping -h 127.0.0.1 -p$$MYSQL_ROOT_PASSWORD --silent",
        ]
      interval: 5s
      timeout: 3s
      retries: 30

volumes:
  db_data:
    name: ${PROJECT_NAME}-mysql-data
  db_data_test:
    name: ${PROJECT_NAME}-mysql-test-data
